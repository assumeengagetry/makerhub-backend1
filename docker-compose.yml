version: '3.8'

services:
  backend:
    build: .
    container_name: makerhub-backend
    ports:
      - "8000:8000"
    env_file: .env
    volumes:
      - ./app:/app/app  # 开发环境热重载
      - ./logs:/app/logs  # 日志持久化
    depends_on:
      - mongo
      - minio
    networks:
      - society-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:5.0
    container_name: makerhub-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - society-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio
    container_name: makerhub-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"  # API Port
      - "9001:9001"  # Console Port
    volumes:
      - minio_data:/data
    networks:
      - society-network
    restart: unless-stopped
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  society-network:
    name: makerhub-network
    driver: bridge

volumes:
  mongo_data:
    name: makerhub-mongo-data
  minio_data:
    name: makerhub-minio-data
